function returnRow(e){return Math.floor(e/9)}function returnCol(e){return e%9}function returnBlock(e){return 3*Math.floor(returnRow(e)/3)+Math.floor(returnCol(e)/3)}function isPossibleRow(e,r,n){for(var o=0;o<=8;o++)if(n[9*r+o]==e)return!1;return!0}function isPossibleCol(e,r,n){for(var o=0;o<=8;o++)if(n[r+9*o]==e)return!1;return!0}function isPossibleBlock(e,r,n){for(var o=0;o<=8;o++)if(n[27*Math.floor(r/3)+o%3+9*Math.floor(o/3)+r%3*3]==e)return!1;return!0}function isPossibleNumber(e,r,n){var o=returnRow(e),t=returnCol(e),u=returnBlock(e);return isPossibleRow(r,o,n)&&isPossibleCol(r,t,n)&&isPossibleBlock(r,u,n)}function isCorrectRow(e,r){for(var n=new Array(1,2,3,4,5,6,7,8,9),o=new Array,t=0;t<=8;t++)o[t]=r[9*e+t];return o.sort(),o.join()==n.join()}function isCorrectCol(e,r){for(var n=new Array(1,2,3,4,5,6,7,8,9),o=new Array,t=0;t<=8;t++)o[t]=r[e+9*t];return o.sort(),o.join()==n.join()}function isCorrectBlock(e,r){for(var n=new Array(1,2,3,4,5,6,7,8,9),o=new Array,t=0;t<=8;t++)o[t]=r[27*Math.floor(e/3)+t%3+9*Math.floor(t/3)+e%3*3];return o.sort(),o.join()==n.join()}function isSolvedSudoku(e){for(var r=0;r<=8;r++)if(!isCorrectBlock(r,e)||!isCorrectRow(r,e)||!isCorrectCol(r,e))return!1;return!0}function determinePossibleValues(e,r){for(var n=new Array,o=1;o<=9;o++)isPossibleNumber(e,o,r)&&n.unshift(o);return n}function determineRandomPossibleValue(e,r){var n=Math.floor(Math.random()*e[r].length);return e[r][n]}function scanSudokuForUnique(e){for(var r=new Array,n=0;n<=80;n++)if(0==e[n]&&(r[n]=new Array,r[n]=determinePossibleValues(n,e),0==r[n].length))return!1;return r}function removeAttempt(e,r){for(var n=new Array,o=0;o<e.length;o++)e[o]!=r&&n.unshift(e[o]);return n}function nextRandom(e){for(var r=9,n=0,o=0;o<=80;o++)void 0!=e[o]&&e[o].length<=r&&e[o].length>0&&(r=e[o].length,n=o);return n}function generateSudoku(){for(var e,r,n,o=new Array(81).fill(0),t=new Array,u=new Array,s=0;!isSolvedSudoku(o)||o.includes(0);)s++,e=scanSudokuForUnique(o),0==e&&(e=t.pop(),o=u.pop()),r=nextRandom(e),n=determineRandomPossibleValue(e,r),e[r].length>1&&(e[r]=removeAttempt(e[r],n),t.push(e.slice()),u.push(o.slice())),o[r]=n;return o}function generateBoard(e){const r=document.querySelector(".sudoku-board-main");r.innerHTML="";for(var n=0;n<81;n++){var o=document.createElement("div"),t=document.createElement("p");o.setAttribute("class","collection-inner-block"),o.setAttribute("id","block-"+n),t.setAttribute("class","inner-block-number"),t.setAttribute("id","number-"+n),o.appendChild(t),r.appendChild(o)}addClues(e)}function addClues(e){var r=0,n=[];switch(e){case"medium":r=27;break;case"easy":r=35;break;default:r=20}for(;n.length<=r;){var o=Math.floor(80*Math.random()),t=document.getElementById("number-"+o);n.includes(o)||(t.textContent=sudokuAnswers[o],n.push(o))}}function showAnswers(){for(var e=0;e<=80;e++){document.getElementById("number-"+e).textContent=sudokuAnswers[e]}}var sudokuAnswers=generateSudoku();document.getElementById("showAnswers").addEventListener("click",showAnswers),document.getElementById("newPuzzle").addEventListener("click",function(){sudokuAnswers=generateSudoku(),generateBoard()}),generateBoard();